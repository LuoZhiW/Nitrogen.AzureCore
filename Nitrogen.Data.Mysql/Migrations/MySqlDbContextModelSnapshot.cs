// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nitrogen.Data.Mysql.Data;

namespace Nitrogen.Data.Mysql.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Nitrogen.Model.Permissions", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastUpdateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("PermissionsCategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("PermissionId");

                    b.HasIndex("PermissionsCategoryId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Nitrogen.Model.PermissionsCategory", b =>
                {
                    b.Property<Guid>("PermissionsCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PermissionCategoryCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PermissionsCategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PermissionsCategoryId");

                    b.ToTable("PermissionsCategories");
                });

            modelBuilder.Entity("Nitrogen.Model.Permissions", b =>
                {
                    b.HasOne("Nitrogen.Model.PermissionsCategory", "PermissionsCategory")
                        .WithMany()
                        .HasForeignKey("PermissionsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
